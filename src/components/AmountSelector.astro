---
interface Props {
  presetAmounts?: number[];
  allowCustom?: boolean;
  name: string;
}

const { 
  presetAmounts = [20, 50, 100, 150, 200],
  allowCustom = true,
  name
} = Astro.props;
---

<div class="w-full">
  <div class="grid grid-cols-2 sm:grid-cols-3 md:grid-cols-5 gap-2 mb-4">
    {presetAmounts.map(amount => (
      <label 
        class="relative cursor-pointer"
      >
        <input
          type="radio"
          name={name}
          value={amount}
          class="peer sr-only"
        />
        <div class="flex items-center justify-center h-12 bg-white border-2 border-secondary-200 rounded-md text-secondary-800 font-medium peer-checked:border-primary-600 peer-checked:bg-primary-50 peer-checked:text-primary-700 peer-hover:bg-secondary-50 transition-all">
          ${amount}
        </div>
      </label>
    ))}
  </div>

  {allowCustom && (
    <div class="relative">
      <div class="absolute inset-y-0 left-0 flex items-center pl-3 pointer-events-none">
        <span class="text-secondary-500">$</span>
      </div>
      <input
        type="number"
        min="1"
        placeholder="Custom amount"
        class="pl-8 w-full rounded-md border-secondary-300 shadow-sm focus:border-primary-300 focus:ring focus:ring-primary-200 focus:ring-opacity-50 text-secondary-800"
        name={`${name}-custom`}
      />
    </div>
  )}
</div>

<script define:vars={{ name }}>
  // Handle radio button and custom amount interaction
  const radioButtons = document.querySelectorAll(`input[name="${name}"]`);
  const customInput = document.querySelector(`input[name="${name}-custom"]`);

  if (radioButtons && customInput) {
    // When a radio button is clicked, clear the custom input
    radioButtons.forEach(button => {
      button.addEventListener('click', () => {
        customInput.value = '';
      });
    });

    // When custom input is used, uncheck radio buttons
    customInput.addEventListener('input', () => {
      radioButtons.forEach(button => {
        button.checked = false;
      });
    });
  }
</script>