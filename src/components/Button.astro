---
interface Props {
  href?: string;
  type?: "button" | "submit" | "reset";
  variant?: "primary" | "secondary" | "outline" | "text";
  size?: "sm" | "md" | "lg";
  class?: string;
  fullWidth?: boolean;
}

const { 
  href, 
  type = "button", 
  variant = "primary", 
  size = "md",
  class: className = "",
  fullWidth = false,
} = Astro.props;

const variants = {
  primary: "bg-primary-600 text-white hover:bg-primary-700 focus:ring-primary-500",
  secondary: "bg-accent-600 text-white hover:bg-accent-700 focus:ring-accent-500",
  outline: "bg-transparent border border-primary-600 text-primary-600 hover:bg-primary-50 focus:ring-primary-500",
  text: "bg-transparent text-primary-600 hover:text-primary-700 focus:ring-primary-500 shadow-none"
};

const sizes = {
  sm: "text-sm px-3 py-1.5",
  md: "text-base px-5 py-2.5",
  lg: "text-lg px-6 py-3"
};

const buttonClasses = `
  inline-flex items-center justify-center font-medium rounded-md
  transition-colors duration-200 focus:outline-none focus:ring-2 
  focus:ring-offset-2 shadow-sm
  ${variants[variant]}
  ${sizes[size]}
  ${fullWidth ? 'w-full' : ''}
  ${className}
`;

const Tag = href ? 'a' : 'button';
---

{
  href ? (
    <a href={href} class={buttonClasses}>
      <slot />
    </a>
  ) : (
    <button type={type} class={buttonClasses}>
      <slot />
    </button>
  )
}